{% extends "react.twig" %}

{% block script %}
    <script type="text/babel">
        const {useState} = React

        function App() {
            return (
                <div className="bg-success p-5">
                    <div className="container">
                        <div className="row">
                            <div className="col"><h1>Hi</h1></div>

                            <div className="col-md-8 col-lg-6">
                                <div className="card rounded border-0 p-5 pb-3">
                                    <div className="row">
                                        <div className="col-sm">
                                            <h5 className="card-title">Join Space</h5>
                                            <p className="card-text">Hundreds of companies using Space to build their
                                                business.</p>
                                        </div>
                                        <div className="col-sm-auto order-sm-2 mb-3 mb-sm-0">
                                            <img
                                                height="100"
                                                src="https://htmlstream.com/preview/space-v2.3.1/assets/svg/illustrations/oc-chatting.svg"
                                                alt="Image Description"/>
                                        </div>
                                    </div>

                                    <SignupForm/>
                                </div>
                            </div>

                        </div>
                    </div>
                </div>
            )
        }

        ReactDOM.createRoot(document.querySelector("main")).render(
            <React.StrictMode>
                <App/>
            </React.StrictMode>
        );

        function SignupForm() {
            const [username, setUsername] = useState('');
            const [password, setPassword] = useState('');
            const [email, setEmail] = useState('');
            const [result, setResult] = useState(null);
            const [error, setError] = useState(null);
            const [loading, setLoading] = useState(false)

            const handleSubmit = async (e) => {
                e.preventDefault();

                try {
                    setLoading(true)
                    const response = await fetch('/user/signup', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json',
                        },
                        body: JSON.stringify({username, password, email}),
                    });

                    const {data, message, success} = await response.json();

                    if (response.ok && success) {
                        setUsername("")
                        setEmail("")
                        setPassword("")
                        setResult(message);
                        setError(null);
                    } else {
                        setResult(null);
                        setError({...data.error, message});
                    }
                } catch (err) {
                    console.error('Error:', err);
                    setError('Something went wrong');
                    setResult(null);
                } finally {
                    setLoading(false)
                }
            };

            const formatError = (error, objKey) => {
                if (error != null && typeof error == "object") {
                    if (!objKey) objKey = "message"
                    if (objKey && objKey in error) {
                        return error[objKey]
                    }
                } else if (typeof error == "string") {
                    return error
                }

                return ""
            }

            return (<React.Fragment>
                <form onSubmit={handleSubmit} className="d-flex flex-column">
                    <label className="mb-3">
                        Username
                        <input
                            className="form-control p-2"
                            type="text"
                            value={username}
                            onChange={(e) => setUsername(e.target.value)}
                                // required
                        />
                        <span className={error && "text-danger"}>{formatError(error, "username")}</span>
                    </label>

                    <label className="mb-3">
                        Email
                        <input
                            className="form-control p-2"
                            type="email"
                            value={email}
                            onChange={(e) => setEmail(e.target.value)}
                                // required
                        />
                        <span className={error && "text-danger"}>{formatError(error, "email")}</span>
                    </label>

                    <label className="mb-3">
                        Password
                        <input
                            className="form-control p-2"
                            type="password"
                            value={password}
                            onChange={(e) => setPassword(e.target.value)}
                                // required
                        />
                        <span className={error && "text-danger"}>{formatError(error, "password")}</span>
                    </label>

                    <div className="d-flex flex-column justify-content-around">
                        <button className="btn btn-success p-2" type="submit" disabled={loading}>Sign up</button>
                        <span className="text-center mt-3 mb-2">Already have an account? <a className="text-success"
                                                                                            href="#">Sign in</a></span>
                    </div>
                </form>
                {error && <span className="alert alert-danger">{formatError(error)}</span>}
                {result && <span className="alert alert-success">{result}</span>}
            </React.Fragment>);
        }
    </script>
{% endblock %}